input {
    file {
        path => "/Users/janusz.rybski/projects/yukon/atm/NYPD_Motor_Vehicle_Collisions_part.csv"
    }
}

filter {
	csv {
		columns => ["date","time","borough","zip_code","latitude","longitude","location","on_street_name","cross_street_name","off_street_name","number_of_persons_injured","number_of_persons_killed","number_of_pedestrians_injured","number_of_pedestrians_killed","number_of_cyclist_injured","number_of_cyclist_killed","number_of_motorist_injured","number_of_motorist_killed","contributing_factor_vehicle_1","contributing_factor_vehicle_2","contributing_factor_vehicle_3","contributing_factor_vehicle_4","contributing_factor_vehicle_5","unique_key", "vehicle_type_code_1","vehicle_type_code_2","vehicle_type_code_3","vehicle_type_code_4","vehicle_type_code_5"]
	}
	
	if [latitude] and [longitude] {
		mutate {
			add_field => { 
				"coords" => "%{longitude}"
				"tmplat" => "%{latitude}"
		    }
		}
		mutate {
			merge => ["coords", "tmplat"]
		}
		
		mutate {
		    # Convert our new array of strings back to float
		    convert => [ "coords", "float" ]
		    # Delete our temporary latitude field
		    remove_field => [ "tmplat" ]
		}
	}

	mutate {
		add_field => { 
			"datetime" => "%{date} %{time}"
			"contributing_factor_vehicle" => "%{contributing_factor_vehicle_1}"
			"vehicle_type" => "%{vehicle_type_code_1}"
		}
		convert => ["number_of_persons_injured","integer","number_of_persons_killed","integer","number_of_pedestrians_injured","integer","number_of_pedestrians_killed","integer","number_of_cyclist_injured","integer","number_of_cyclist_killed","integer","number_of_motorist_injured","integer","number_of_motorist_killed","integer"]
		strip => ["on_street_name", "cross_street_name"]
	}

    mutate {
        add_field => {
            "on_street_name-analyzed" => "%{on_street_name}"
        }
    }
	
	if [contributing_factor_vehicle_2] and "Unspecified" != [contributing_factor_vehicle_2] and [contributing_factor_vehicle_2] not in [contributing_factor_vehicle] {
		mutate {
			merge => ["contributing_factor_vehicle", "contributing_factor_vehicle_2"]
		}
	}
	if [contributing_factor_vehicle_3] and "Unspecified" != [contributing_factor_vehicle_3] and [contributing_factor_vehicle_3] not in [contributing_factor_vehicle] {
		mutate {
			merge => ["contributing_factor_vehicle", "contributing_factor_vehicle_3"]
		}
	}
	if [contributing_factor_vehicle_4] and "Unspecified" != [contributing_factor_vehicle_4] and [contributing_factor_vehicle_4] not in [contributing_factor_vehicle] {	
		mutate {
			merge => ["contributing_factor_vehicle", "contributing_factor_vehicle_4"]
		}
	}
	if [contributing_factor_vehicle_5] and "Unspecified" != [contributing_factor_vehicle_5] and [contributing_factor_vehicle_5] not in [contributing_factor_vehicle]  {	
		mutate {
			merge => ["contributing_factor_vehicle", "contributing_factor_vehicle_5"]
		}	
	}
	
	if [vehicle_type_code_2] and "Unspecified" != [vehicle_type_code_2] and [vehicle_type_code_2] not in [vehicle_type] {
		mutate {
			merge => ["vehicle_type", "vehicle_type_code_2"]
		}
	}
	if [vehicle_type_code_3] and "Unspecified" != [vehicle_type_code_3] and [vehicle_type_code_3] not in [vehicle_type] {
		mutate {
			merge => ["vehicle_type", "vehicle_type_code_3"]
		}
	}
	if [vehicle_type_code_4] and "Unspecified" != [vehicle_type_code_4] and [vehicle_type_code_4] not in [vehicle_type] {
		mutate {
			merge => ["vehicle_type", "vehicle_type_code_4"]
		}
	}
	if [vehicle_type_code_5] and "Unspecified" != [vehicle_type_code_5] and [vehicle_type_code_5] not in [vehicle_type] {
		mutate {
			merge => ["vehicle_type", "vehicle_type_code_5"]
		}
	}
	date {
		match => [ "datetime", "MM/dd/YY HH:mm", "MM/dd/YY H:mm"]
	}
    
	mutate {
		remove_field => ["latitude", "longitude","coords", "datetime", "host", "path", "message", "contributing_factor_vehicle_1", "contributing_factor_vehicle_2", "contributing_factor_vehicle_3", "contributing_factor_vehicle_4", "contributing_factor_vehicle_5", "vehicle_type_code_1","vehicle_type_code_2","vehicle_type_code_3","vehicle_type_code_4","vehicle_type_code_5"]
	}
}


output {
 	stdout { codec => dots }
 	#stdout { codec => rubydebug }
 	elasticsearch {
		protocol => http
		host => "localhost"	
		index => "nycpd"	
        document_type => "accidents"
        manage_template => false
		template_name => "nycpd_accidents"
        workers => 2
	}
}
